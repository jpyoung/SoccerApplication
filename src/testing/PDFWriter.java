package testing;

import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.Date;

import com.itextpdf.text.Anchor;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

import controller.Controller;

/**
 * @author Jack Young
 * @date Oct 29, 2012
 */
public class PDFWriter {
	
	  private static String FILE = "UserPdf.pdf";
	  private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
	      Font.BOLD);
	  private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
	      Font.NORMAL, BaseColor.RED);
	  private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
	      Font.BOLD);
	  private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
	      Font.BOLD);

	
//	public static void runPDFwriter() {
//		  try {
//		      Document document = new Document();
//		      PdfWriter.getInstance(document, new FileOutputStream(FILE));
//		      document.open();
//		      addMetaData(document);
//		      addTitlePage(document);
//		      addContent(document);
//		      document.close();
//		    } catch (Exception e) {
//		      e.printStackTrace();
//		    }
//	}
	
	
		public static void runPDFwriter(Controller c) {
			  try {
			      Document document = new Document();
			      PdfWriter.getInstance(document, new FileOutputStream(FILE));
			      document.open();
			      addMetaData(document);
			      addTitlePage(document, c);
			      addContent(document, c);
			      document.close();
			    } catch (Exception e) {
			      e.printStackTrace();
			    }
		}
	

	  // iText allows to add metadata to the PDF which can be viewed in your Adobe
	  // Reader
	  // under File -> Properties
	  private static void addMetaData(Document document) {
	    document.addTitle("My first PDF");
	    document.addSubject("Using iText");
	    document.addKeywords("Java, PDF, iText");
	    document.addAuthor("Jack Young");
	    document.addCreator("Jack Young");
	  }

	  
	  
	  
	  
	  private static void addTitlePage(Document document, Controller c)
	      throws DocumentException {
	    Paragraph preface = new Paragraph();
	    // We add one empty line
	    addEmptyLine(preface, 1);
	    // Lets write a big header
	    preface.add(new Paragraph("Soccer Application - IT 306 : By Group 6", catFont));

	    addEmptyLine(preface, 1);
	    // Will create: Report generated by: _name, _date
	    preface.add(new Paragraph("Report generated by: " + System.getProperty("user.name") + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
	        smallBold));
	    addEmptyLine(preface, 3);
	    preface.add(new Paragraph("This document describes something which is very important ",
	        smallBold));

	    addEmptyLine(preface, 8);

//	    preface.add(new Paragraph("This document is a preliminary version and not subject to your license agreement or any other agreement with vogella.com ;-).",
//	        redFont));

	    document.add(preface);
	    // Start a new page
	    document.newPage();
	  }

	  private static void addContent(Document document, Controller c) throws DocumentException {
	  
	    
	    Anchor anchor = new Anchor("User Information/Data", catFont);
	    anchor.setName("UserCredentials Table");

	    // Second parameter is the number of the chapter
	    Chapter catPart = new Chapter(new Paragraph(anchor), 1);

	    Paragraph subPara = new Paragraph("Subcategory 1", subFont);
	    Section subCatPart = catPart.addSection(subPara);
	  
	    Paragraph paragraph = new Paragraph();
	    addEmptyLine(paragraph, 5);

	    subCatPart.add(paragraph);
	    createSecondTable(subCatPart, c);

	    document.add(catPart);
	  }
	
	
	  public static void createSecondTable(Section subCatPart, Controller c) throws BadElementException{
		  
		  PdfPTable table = new PdfPTable(4);
		  
		  //String tem = "username: jyoung   password: greatness   id: 1   userType: 3";
		  
		  
		  PdfPCell c1 = new PdfPCell(new Phrase("username"));
		    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		    c1.setBackgroundColor(BaseColor.CYAN);
		    table.addCell(c1);

		    c1 = new PdfPCell(new Phrase("password"));
		    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		    c1.setBackgroundColor(BaseColor.CYAN);
		    table.addCell(c1);

		    c1 = new PdfPCell(new Phrase("id"));
		    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		    c1.setBackgroundColor(BaseColor.CYAN);
		    table.addCell(c1);
		    
		    c1 = new PdfPCell(new Phrase("userType"));
		    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		    c1.setBackgroundColor(BaseColor.CYAN);
		    table.addCell(c1);
		    table.setHeaderRows(1);
		    
			ArrayList<String> xU = c.getUc().getUserNamesArraylist();
			ArrayList<String> xP = c.getUc().getPasswordsArraylist();
			ArrayList<Integer> xID = c.getUc().getIdArraylist();
			ArrayList<Integer> xTYPE = c.getUc().getUserTypeArraylist();
			
			
			System.out.println("-----------------Printer info---------------");
			System.out.println("username length: " + xU.size());
			System.out.println("PASSWORD length: " + xP.size());
			System.out.println("id length: " + xID.size());
			System.out.println("userType length: " + xTYPE.size());
			System.out.println("--------------------------------------------\n\n");
			
			int loopLength = 0;
			if (xU.size() == xP.size()) {
				loopLength = xU.size();
			}
			
			for (int i = 0; i < loopLength; i++) {
				table.addCell(xU.get(i));
			    table.addCell(xP.get(i));
			    table.addCell(String.valueOf(xID.get(i)));
			    table.addCell(String.valueOf(xTYPE.get(i)));
			}
			
		    
//		    table.addCell("jyoung");
//		    table.addCell("greatness");
//		    table.addCell("1");
//		    table.addCell("3");
//		    
//		    table.addCell("bVam");
//		    table.addCell("vam");
//		    table.addCell("5");
//		    table.addCell("1");
		    
		    subCatPart.add(table);
	  }


	

	  private static void addEmptyLine(Paragraph paragraph, int number) {
	    for (int i = 0; i < number; i++) {
	      paragraph.add(new Paragraph(" "));
	    }
	  }
}
